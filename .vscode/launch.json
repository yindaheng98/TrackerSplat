{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "train 1st frame",
            "type": "debugpy",
            "request": "launch",
            "module": "reduced_3dgs.train",
            "console": "integratedTerminal",
            "args": [
                "-s",
                "data/discussion/frame1",
                "-d",
                "output/discussion/frame1",
                "-i",
                "10000",
                "--mode",
                "camera-densify-prune-shculling",
                // "camera-prune-shculling",
                "--with_scale_reg",
                "--empty_cache_every_step",
                // hyperparams
                "-oscale_reg_thr_scale=0.2",
                "-odensify_percent_too_big=0.15",
                "-odepth_l1_weight_init=1.0",
                "-odepth_l1_weight_final=1.0",
                "-odepth_from_iter=4000",
                "-odepth_local_relative_kernel_radius=32",
                "-odepth_local_relative_stride=16",
                "-odepth_resize=577",
                "-omercy_type='redundancy_opacity_opacity'",
                "-oimportance_score_resize=1280",
                // steps
                "-oposition_lr_max_steps=10000",
                "-ocull_at_steps=[9000]",
                "-oscale_reg_from_iter=500",
                "-odepth_l1_weight_max_steps=10000",
                // steps for densify
                // tips: depth will make the training unstable, and the pruning strategy may prune too many points
                // densification of points would slower than pruning, so more densify and less pruning
                "-odensify_from_iter=1000",
                "-odensify_until_iter=7500",
                "-odensify_interval=100",
                "-oprune_from_iter=2000",
                "-oprune_until_iter=7000",
                "-oprune_interval=1000",
                "-oopacity_reset_from_iter=3000",
                "-oopacity_reset_until_iter=5000",
                "-oopacity_reset_interval=1000",
                "-oimportance_prune_from_iter=2000",
                "-oimportance_prune_until_iter=8500",
                "-oimportance_prune_interval=100",
                // steps for camera
                "-ocamera_position_lr_max_steps=10000",
                "-ocamera_rotation_lr_max_steps=10000",
                "-ocamera_exposure_lr_max_steps=10000",
            ],
            "justMyCode": false
        },
        {
            "name": "render 1st frame",
            "type": "debugpy",
            "request": "launch",
            "module": "gaussian_splatting.render",
            "console": "integratedTerminal",
            "args": [
                "-s",
                "data/discussion/frame1",
                "-d",
                "output/discussion/frame1",
                "-i",
                "10000",
                "--mode",
                "camera",
                "--load_camera",
                "output/discussion/frame1/cameras.json",
            ],
            "justMyCode": false
        },
        {
            "name": "dot motionestimation",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.motionestimation",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-s",
                "data/discussion",
                "-d",
                "output/discussion",
                "-i",
                "1000",
                "--pipeline",
                // "refine/base-propagate-dot-cotracker3",
                // "refine/regularized-propagate-dot-cotracker3",
                "refine/maskregularized-propagate-dot-cotracker3",
                // "refine/base-base-dot-cotracker3",
                // "track/propagate-dot-cotracker3",
                // "track/filter-dot-cotracker3",
                // "track/base-dot-cotracker3",
                "--iteration_init",
                "10000",
                "--start_frame",
                "1",
                "-n300",
                "-b9",
                "-orescale_factor=0.5",
                "-rloss_weight_overall=0.1",
                "-rposition_lr_max_steps=4000",
                "-rscaling_lr=0.000001",
                "--load_camera",
                "output/discussion/frame1/cameras.json",
            ]
        },
        {
            "name": "train/regularized motionestimation",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.motionestimation",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-s",
                "data/discussion",
                "-d",
                "output/discussion",
                "-i",
                "1000",
                "--pipeline",
                "train/regularized",
                // "train1step/regularized",
                // "train/regularizedhexplane",
                // "train1step/regularizedhexplane",
                "--iteration_init",
                "10000",
                "--start_frame",
                "1",
                "-n300",
                "-b9",
                "-o",
                "neighbors=20",
            ]
        },
        {
            "name": "render video",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.render",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-d",
                "output/discussion/refine/maskregularized-propagate-dot-cotracker3",
                "-i",
                "1000",
                "--destination_init",
                "output/discussion/frame1",
                "--iteration_init",
                "10000",
                "--frame_start",
                "2",
                "--frame_end",
                "300",
                "--mode",
                "base",
                "--load_camera",
                "output/discussion/frame1/cameras.json",
                "--data_dir",
                "output/discussion/render",
            ]
        },
        // ---------------- Other configurations ----------------
        {
            "name": "dot motionestimation speedtest",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.motionestimation_speedtest",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-s",
                "data/discussion",
                "-d",
                "output/discussion",
                "-i",
                "1000",
                "--pipeline",
                // "refine/base-propagate-dot-cotracker3",
                // "refine/base-base-dot-cotracker3",
                "track/propagate-dot-cotracker3",
                // "track/filter-dot-cotracker3",
                // "track/base-dot-cotracker3",
                "--iteration_init",
                "10000",
                "--start_frame",
                "1",
                "-n300",
                "-b9",
                "-orescale_factor=0.5",
                "--parallel_device=0",
                "--parallel_device=1",
                "--parallel_device=2",
                "--parallel_device=3",
            ],
        },
        {
            "name": "point tracking",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.pointtracking",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-s",
                "data/walking",
                "-d",
                "output/walking",
                "--estimator",
                "dot-cotracker3",
                "--start_frame",
                "31",
                "-n",
                "45",
                "--tracking_rescale",
                "0.3",
                "--downsample_rate",
                "8"
            ],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "incremental training",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.incrementaltraining",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-s",
                "data/walking/frame69",
                "-d",
                "output/walking/frame69",
                "-i",
                "10000",
                "--mode",
                "regularized",
                // "base",
                "--destination_base",
                "output/walking/frame61",
                "--iteration_base",
                "10000",
            ]
        },
        {
            "name": "incremental rendering",
            "type": "debugpy",
            "request": "launch",
            "module": "trackersplat.incrementalrender",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "-s",
                "data/walking/frame69",
                "-d",
                "output/walking/frame69",
                "-i",
                "10000",
                "--destination_base",
                "output/walking/frame61",
                "--iteration_base",
                "10000",
            ]
        },
        {
            "name": "parse camera",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/parse_camera.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--mode",
                "n3dv",
                "--path",
                "data/coffee_martini",
                "--colmap_executable",
                "/home/dahengyin/miniconda3/envs/gaussians/bin/colmap",
                "--n_frames",
                "300",
            ]
        },
        {
            "name": "parse camera SIGA2025VVC",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/parse_camera_SIGA2025VVC.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--path",
                "data/SIGA2025VVC-Dataset/compression/test/004_1_seq1",
            ]
        },
        {
            "name": "stack long videos",
            "type": "debugpy",
            "request": "launch",
            "program": "tools/merge_video.py",
            "console": "integratedTerminal",
            "args": [
                "output",
                "boxing",
                "st-nerf",
                "50",
                "output/collected_videos",
            ],
        },
    ]
}